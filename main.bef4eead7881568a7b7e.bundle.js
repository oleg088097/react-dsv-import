(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1255:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(458);module._StorybookPreserveDecorators=!0,Object(_storybook_react__WEBPACK_IMPORTED_MODULE_0__.configure)([__webpack_require__(1279),__webpack_require__(1283)],module)}.call(this,__webpack_require__(1256)(module))},1279:function(module,exports,__webpack_require__){var map={"./antd-integration.stories.mdx":1280,"./material-integration.stories.mdx":1281,"./start.stories.mdx":1282};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1279},1280:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(1),__webpack_require__(42),__webpack_require__(22),__webpack_require__(11),__webpack_require__(3),__webpack_require__(59),__webpack_require__(44),__webpack_require__(279),__webpack_require__(280),__webpack_require__(4),__webpack_require__(23),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(7),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(39);__webpack_require__(287);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null!=arguments[i]?arguments[i]:{},i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}));return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return(_extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i])Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],0<=excluded.indexOf(key)||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],0<=excluded.indexOf(key)||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={},_ref2=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.Meta,{title:"Usage|Integrations/Ant Design",mdxType:"Meta"}),_ref3=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("p",null,"This page shows how an input and a preview component with Ant Design (",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("inlineCode",{parentName:"p"},">= 4"),") can be built and connected to this component."),_ref4=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("p",null,"First the imports need to be declared."),_ref5=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.Source,{language:"tsx",code:"\nimport * as React from 'react';\nimport { DSVImport as Import, ColumnsType, useDSVImport } from 'react-dsv-import';\nimport { Form, Input, Table } from 'antd';\n",mdxType:"Source"}),_ref6=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.Source,{language:"tsx",code:"\nconst TextareaInput: React.FC = () => {\n  const [, dispatch] = useDSVImport();\n \n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    dispatch({ type: 'setRaw', raw: event.target.value });\n  };\n \n  return <Input.TextArea rows={15} onChange={handleChange} />;\n};\n",mdxType:"Source"}),_ref7=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.Source,{language:"tsx",code:"\nconst TablePreview: React.FC = () => {\n  const [context] = useDSVImport();\n \n  const getRowKey = (record: { [key: string]: string }) => {\n    return context.parsed.indexOf(record);\n  };\n \n  return (\n    <Table pagination={false} dataSource={context.parsed} rowKey={getRowKey}>\n      {context.columns.map((r) => {\n        return <Table.Column key={r.key} dataIndex={r.key} title={r.label ? r.label : r.key} />;\n      })}\n    </Table>\n  );\n};\n",mdxType:"Source"}),_ref8=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.Source,{language:"tsx",code:"\nexport interface Props<T> {\n  onChange?: (value: T[]) => void;\n  columns: ColumnsType<T>;\n}\n \nexport const DSVImport = <T extends { [key: string]: string }>(props: Props<T>) => {\n  const intl = useIntl();\n \n  return (\n    <Form layout='vertical'>\n      <Import<T> columns={props.columns} onChange={props.onChange}>\n        <Form.Item label='Input'>\n          <TextareaInput />\n        </Form.Item>\n        <Form.Item label='Preview'>\n          <TablePreview />\n        </Form.Item>\n      </Import>\n    </Form>\n  );\n};\n",mdxType:"Source"});function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),_ref2,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("h1",{id:"ant-design-integration"},"Ant Design integration"),_ref3,_ref4,_ref5,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("h2",{id:"input-component"},"Input component"),_ref6,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("h2",{id:"preview-component"},"Preview component"),_ref7,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("h2",{id:"create-context"},"Create context"),_ref8)}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.story={parameters:{docsOnly:!0}};var componentMeta={title:"Usage|Integrations/Ant Design",includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{};var _ref9=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.AddContext,{mdxStoryNameToKey:{},mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(MDXContent,null));componentMeta.parameters.docs=_objectSpread(_objectSpread({},componentMeta.parameters.docs||{}),{},{page:function page(){return _ref9}}),__webpack_exports__.default=componentMeta},1281:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(1),__webpack_require__(42),__webpack_require__(22),__webpack_require__(11),__webpack_require__(3),__webpack_require__(59),__webpack_require__(44),__webpack_require__(279),__webpack_require__(280),__webpack_require__(4),__webpack_require__(23),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(7),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(39);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null!=arguments[i]?arguments[i]:{},i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}));return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return(_extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i])Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],0<=excluded.indexOf(key)||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],0<=excluded.indexOf(key)||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={},_ref2=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.Meta,{title:"Usage|Integrations/Material UI",mdxType:"Meta"}),_ref3=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("p",null,"This page shows how an input and a preview component with Material UI can be built and connected to this component. It's possible to put everything into one file."),_ref4=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("p",null,"First the imports need to be declared."),_ref5=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.Source,{language:"tsx",code:"\nimport * as React from 'react';\nimport { DSVImport as Import, ColumnsType, useDSVImport } from 'react-dsv-import';\n",mdxType:"Source"});function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),_ref2,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("h1",{id:"material-ui-integration"},"Material UI integration"),_ref3,_ref4,_ref5,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("h2",{id:"input-component"},"Input component"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("h2",{id:"preview-component"},"Preview component"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("h2",{id:"create-context"},"Create context"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.story={parameters:{docsOnly:!0}};var componentMeta={title:"Usage|Integrations/Material UI",includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{};var _ref6=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.AddContext,{mdxStoryNameToKey:{},mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(MDXContent,null));componentMeta.parameters.docs=_objectSpread(_objectSpread({},componentMeta.parameters.docs||{}),{},{page:function page(){return _ref6}}),__webpack_exports__.default=componentMeta},1282:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(1),__webpack_require__(42),__webpack_require__(22),__webpack_require__(11),__webpack_require__(3),__webpack_require__(59),__webpack_require__(44),__webpack_require__(279),__webpack_require__(280),__webpack_require__(4),__webpack_require__(23),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(7),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(39),_README_md__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(287);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null!=arguments[i]?arguments[i]:{},i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}));return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return(_extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i])Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],0<=excluded.indexOf(key)||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],0<=excluded.indexOf(key)||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={},_ref2=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.Meta,{title:"Start|Readme",mdxType:"Meta"}),_ref3=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.Description,{markdown:_README_md__WEBPACK_IMPORTED_MODULE_14__.a,mdxType:"Description"});function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),_ref2,_ref3)}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.story={parameters:{docsOnly:!0}};var componentMeta={title:"Start|Readme",includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{};var _ref4=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.AddContext,{mdxStoryNameToKey:{},mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(MDXContent,null));componentMeta.parameters.docs=_objectSpread(_objectSpread({},componentMeta.parameters.docs||{}),{},{page:function page(){return _ref4}}),__webpack_exports__.default=componentMeta},1283:function(module,exports,__webpack_require__){var map={"./DSVImport.stories.tsx":1300};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1283},1300:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"BasicUsage",(function(){return BasicUsage})),__webpack_require__.d(__webpack_exports__,"UsingOnChangeCallback",(function(){return UsingOnChangeCallback})),__webpack_require__.d(__webpack_exports__,"UsingOnValidationCallback",(function(){return UsingOnValidationCallback}));var contextSingleton,Delimiter,styled_base_browser_esm=__webpack_require__(197),taggedTemplateLiteral=__webpack_require__(459),slicedToArray=__webpack_require__(78),defineProperty=__webpack_require__(196),react=__webpack_require__(0),react_default=__webpack_require__.n(react),objectSpread2=__webpack_require__(68),emptyState={columns:[]},createReducer=function(){return function(state,action){return function(state,action){switch(action.type){case"setRaw":return Object(objectSpread2.a)(Object(objectSpread2.a)({},state),{},{raw:action.raw});case"setParsed":return Object(objectSpread2.a)(Object(objectSpread2.a)({},state),{},{parsed:action.parsed});case"setValidation":return Object(objectSpread2.a)(Object(objectSpread2.a)({},state),{},{validation:action.errors});default:return state}}(state,action)}},getDSVImportContext=function(){return contextSingleton||(contextSingleton=Object(react.createContext)([emptyState,function(){throw new Error("Not initialized")}])),contextSingleton},useDSVImport=function(){return Object(react.useContext)(getDSVImportContext())};__webpack_require__(22),__webpack_require__(9),__webpack_require__(161),__webpack_require__(1286),__webpack_require__(27),__webpack_require__(28),__webpack_require__(96),__webpack_require__(88),__webpack_require__(23);!function(Delimiter){Delimiter.COMMA=",",Delimiter.SEMICOLON=";",Delimiter.TAB="\t"}(Delimiter||(Delimiter={}));var createParserMiddleware=function(){return function(state,next,action){if("setRaw"===action.type){var delimiter=(value=action.raw,defaultDelimiter=Delimiter.COMMA,currentDelimiter=defaultDelimiter,maximumScore=0,Object.values(Delimiter).forEach((function(s){var currentScore=(value.match(new RegExp(s,"g"))||[]).length;maximumScore<currentScore&&(currentDelimiter=s,maximumScore=currentScore)})),currentDelimiter),parsed=[];""!==action.raw&&(parsed=function(value,columns,delimiter){return value.split("\n").map((function(line){var lineValues=line.split(delimiter),parsedLine={};return columns.forEach((function(column,columnIndex){parsedLine[column.key]=lineValues[columnIndex]})),parsedLine}))}(action.raw,state.columns,delimiter)),next({type:"setParsed",parsed:parsed})}var value,defaultDelimiter,currentDelimiter,maximumScore}},applyMiddlewares=(__webpack_require__(42),function(state,dispatch){for(var _len=arguments.length,middlewares=Array(2<_len?_len-2:0),_key=2;_key<_len;_key++)middlewares[_key-2]=arguments[_key];return function(action){var call=function(nextMiddlewares,value){nextMiddlewares.forEach((function(m,i){m(state,function(nextMiddlewares){return function(value){dispatch(value),call(nextMiddlewares,value)}}(function(nextMiddlewares,i){return nextMiddlewares.filter((function(_,filterIndex){return i!==filterIndex}))}(nextMiddlewares,i)),value)}))};call(middlewares,action)}}),validateColumn=(__webpack_require__(25),__webpack_require__(64),__webpack_require__(11),__webpack_require__(16),__webpack_require__(56),__webpack_require__(33),__webpack_require__(12),__webpack_require__(356),__webpack_require__(17),__webpack_require__(18),function(key,data,rules){var errors=[];if(rules){var values=data.map((function(d){return new String(d).toString()}));rules.forEach((function(r){if(r.constraint.unique&&!function(values){return new Set(values).size===values.length}(values)){var duplicates=function(values){return Array.from(new Set(values.filter((function(item,index){return values.indexOf(item)!=index}))))}(values);values.forEach((function(v,i){-1!==duplicates.indexOf(v)&&errors.push({column:key,row:i,message:r.message})}))}else if("function"==typeof r.constraint.callback){var callback=r.constraint.callback;values.forEach((function(v,i){callback(v)&&errors.push({column:key,row:i,message:r.message})}))}}))}return errors}),createTransformerMiddleware=(__webpack_require__(128),function(){return function(state,next,action){if("setParsed"===action.type){var parsed=action.parsed;state.transformers&&(parsed=state.transformers.reduce((function(acc,t){return values=acc,transformer=t,columns=state.columns,values.map((function(r){var transformed=Object(objectSpread2.a)({},r);return columns.forEach((function(c){transformed[c.key]=transformer(new String(r[c.key]).toString())})),transformed}));var values,transformer,columns}),parsed));var hasColumnTransformers=!!state.columns.find((function(c){return c.transformers}));hasColumnTransformers&&(values=parsed,columns=state.columns,parsed=values.map((function(r){var transformed=Object(objectSpread2.a)({},r);return columns.forEach((function(c){c.transformers&&(transformed[c.key]=c.transformers.reduce((function(acc,t){return t(acc)}),new String(r[c.key]).toString()))})),transformed}))),(state.transformers||hasColumnTransformers)&&next({type:"setParsed",parsed:parsed})}var values,columns}}),EventListener=function(props){var _useDSVImport=useDSVImport(),context=Object(slicedToArray.a)(_useDSVImport,1)[0];return Object(react.useEffect)((function(){context.parsed&&props.onChange&&props.onChange(context.parsed)}),[context.parsed]),Object(react.useEffect)((function(){context.validation&&props.onValidation&&props.onValidation(context.validation)}),[context.validation]),null},DSVImport=function(props){var DSVImportContext=getDSVImportContext(),initialValues={columns:props.columns,transformers:props.transformers},_useReducer=Object(react.useReducer)(createReducer(),initialValues),_useReducer2=Object(slicedToArray.a)(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1],enhancedDispatch=applyMiddlewares(state,dispatch,createParserMiddleware(),createTransformerMiddleware(),(function(state,next,action){"setParsed"===action.type&&next({type:"setValidation",errors:state.columns.reduce((function(acc,c){return acc.concat(validateColumn(c.key,action.parsed.map((function(r){return r[c.key]})),c.rules))}),[])})}));return react_default.a.createElement(DSVImportContext.Provider,{value:[state,enhancedDispatch]},react_default.a.createElement(EventListener,{onChange:props.onChange,onValidation:props.onValidation}),props.children)};DSVImport.__docgenInfo={description:"",methods:[],displayName:"DSVImport"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/DSVImport.tsx"]={name:"DSVImport",docgenInfo:DSVImport.__docgenInfo,path:"src/DSVImport.tsx"});__webpack_require__(188);var TextareaInput=function(){var _useDSVImport=useDSVImport(),dispatch=Object(slicedToArray.a)(_useDSVImport,2)[1];return react_default.a.createElement("textarea",{onChange:function(event){dispatch({type:"setRaw",raw:event.target.value})}})};TextareaInput.__docgenInfo={description:"",methods:[],displayName:"TextareaInput"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/inputs/TextareaInput.tsx"]={name:"TextareaInput",docgenInfo:TextareaInput.__docgenInfo,path:"src/components/inputs/TextareaInput.tsx"});__webpack_require__(76);var TablePreview=function(props){var _useDSVImport=useDSVImport(),context=Object(slicedToArray.a)(_useDSVImport,1)[0],Cell=function(props){var errors=function(columnKey,rowIndex){if(context.validation)return context.validation.filter((function(e){return e.column===columnKey&&e.row===rowIndex}))}(props.columnKey,props.rowIndex),messages=null==errors?void 0:errors.map((function(e){return e.message})).join(";");return react_default.a.createElement("td",{className:messages?"error":"",title:messages},props.children)};return react_default.a.createElement("table",{className:props.className},react_default.a.createElement("thead",null,react_default.a.createElement("tr",null,context.columns.map((function(column,columnIndex){return react_default.a.createElement("th",{key:columnIndex},column.label)})))),react_default.a.createElement("tbody",null,context.parsed?context.parsed.map((function(row,rowIndex){return react_default.a.createElement("tr",{key:rowIndex},context.columns.map((function(column,columnIndex){return react_default.a.createElement(Cell,{key:columnIndex,columnKey:column.key.toString(),rowIndex:rowIndex},row[column.key])})))})):null))};TablePreview.__docgenInfo={description:"",methods:[],displayName:"TablePreview"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/previews/TablePreview.tsx"]={name:"TablePreview",docgenInfo:TablePreview.__docgenInfo,path:"src/components/previews/TablePreview.tsx"});__webpack_require__(440),__webpack_require__(441),__webpack_require__(442);function src_DSVImport(props){return DSVImport(props)}src_DSVImport.TextareaInput=TextareaInput,src_DSVImport.TablePreview=TablePreview;var dist=__webpack_require__(144);function _templateObject(){var data=Object(taggedTemplateLiteral.a)(["\n  .error {\n    border: 1px solid red;\n  }\n"]);return _templateObject=function(){return data},data}__webpack_require__(187).withSource;var addSourceDecorator=__webpack_require__(187).addSource,__SOURCE_PREFIX__=(__webpack_require__(187).withSource,addSourceDecorator=__webpack_require__(187).addSource,"/home/travis/build/openscript/react-dsv-import/src"),__STORY__="import React, { useState } from 'react';\nimport { DSVImport, ColumnType } from './';\nimport { action } from '@storybook/addon-actions';\nimport styled from '@emotion/styled';\n\nexport default { title: 'Usage|Examples' };\n\ntype BasicType = { forename: string; surname: string; email: string };\n\nexport const BasicUsage = () => {\n  const columns: ColumnType<BasicType>[] = [\n    { key: 'forename', label: 'Forename' },\n    { key: 'surname', label: 'Surname' },\n    { key: 'email', label: 'Email' }\n  ];\n  const onChangeAction = action('Parsed value has changed');\n\n  return (\n    <DSVImport<BasicType> columns={columns} onChange={onChangeAction}>\n      <DSVImport.TextareaInput />\n      <DSVImport.TablePreview />\n    </DSVImport>\n  );\n};\nBasicUsage.story = { name: 'Basic usage' };\n\nexport const UsingOnChangeCallback = () => {\n  const columns: ColumnType<BasicType>[] = [\n    { key: 'forename', label: 'Forename' },\n    { key: 'surname', label: 'Surname' },\n    { key: 'email', label: 'Email' }\n  ];\n  const onChangeAction = action('Parsed value has changed');\n  const [state, setState] = useState<BasicType[]>([]);\n\n  const handleOnChange = (value: BasicType[]) => {\n    onChangeAction(value);\n    setState(value);\n  };\n\n  return (\n    <>\n      <DSVImport<BasicType> columns={columns} onChange={handleOnChange}>\n        <DSVImport.TextareaInput />\n        <DSVImport.TablePreview />\n      </DSVImport>\n      <h2>Current state as JSON:</h2>\n      {JSON.stringify(state)}\n    </>\n  );\n};\nUsingOnChangeCallback.story = { name: 'Using on change callback' };\n\nconst CustomTablePreview = styled(DSVImport.TablePreview)`\n  .error {\n    border: 1px solid red;\n  }\n`;\n\nexport const UsingOnValidationCallback = () => {\n  const columns: ColumnType<BasicType>[] = [\n    { key: 'forename', label: 'Forename' },\n    { key: 'surname', label: 'Surname' },\n    { key: 'email', label: 'Email', rules: [{ constraint: { unique: true }, message: 'Duplicates are not allowed' }] }\n  ];\n  const onChangeAction = action('Parsed value has changed');\n  const onValidationAction = action('Validation value has changed');\n\n  return (\n    <DSVImport<BasicType> columns={columns} onChange={onChangeAction} onValidation={onValidationAction}>\n      <DSVImport.TextareaInput />\n      <CustomTablePreview />\n    </DSVImport>\n  );\n};\nUsingOnValidationCallback.story = { name: 'Using on validation callback' };\n",__ADDS_MAP__={"usage-examples--basic-usage":{startLoc:{col:26,line:10},endLoc:{col:1,line:24},startBody:{col:26,line:10},endBody:{col:1,line:24}},"usage-examples--using-on-change-callback":{startLoc:{col:37,line:27},endLoc:{col:1,line:51},startBody:{col:37,line:27},endBody:{col:1,line:51}},"usage-examples--using-on-validation-callback":{startLoc:{col:41,line:60},endLoc:{col:1,line:75},startBody:{col:41,line:60},endBody:{col:1,line:75}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={},BasicUsage=(__webpack_exports__.default={parameters:Object(defineProperty.a)({storySource:{source:"\n\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/home/travis/build/openscript/react-dsv-import/src\";\n// @ts-ignore\nvar __STORY__ = \"import React, { useState } from 'react';\\nimport { DSVImport, ColumnType } from './';\\nimport { action } from '@storybook/addon-actions';\\nimport styled from '@emotion/styled';\\n\\nexport default { title: 'Usage|Examples' };\\n\\ntype BasicType = { forename: string; surname: string; email: string };\\n\\nexport const BasicUsage = () => {\\n  const columns: ColumnType<BasicType>[] = [\\n    { key: 'forename', label: 'Forename' },\\n    { key: 'surname', label: 'Surname' },\\n    { key: 'email', label: 'Email' }\\n  ];\\n  const onChangeAction = action('Parsed value has changed');\\n\\n  return (\\n    <DSVImport<BasicType> columns={columns} onChange={onChangeAction}>\\n      <DSVImport.TextareaInput />\\n      <DSVImport.TablePreview />\\n    </DSVImport>\\n  );\\n};\\nBasicUsage.story = { name: 'Basic usage' };\\n\\nexport const UsingOnChangeCallback = () => {\\n  const columns: ColumnType<BasicType>[] = [\\n    { key: 'forename', label: 'Forename' },\\n    { key: 'surname', label: 'Surname' },\\n    { key: 'email', label: 'Email' }\\n  ];\\n  const onChangeAction = action('Parsed value has changed');\\n  const [state, setState] = useState<BasicType[]>([]);\\n\\n  const handleOnChange = (value: BasicType[]) => {\\n    onChangeAction(value);\\n    setState(value);\\n  };\\n\\n  return (\\n    <>\\n      <DSVImport<BasicType> columns={columns} onChange={handleOnChange}>\\n        <DSVImport.TextareaInput />\\n        <DSVImport.TablePreview />\\n      </DSVImport>\\n      <h2>Current state as JSON:</h2>\\n      {JSON.stringify(state)}\\n    </>\\n  );\\n};\\nUsingOnChangeCallback.story = { name: 'Using on change callback' };\\n\\nconst CustomTablePreview = styled(DSVImport.TablePreview)`\\n  .error {\\n    border: 1px solid red;\\n  }\\n`;\\n\\nexport const UsingOnValidationCallback = () => {\\n  const columns: ColumnType<BasicType>[] = [\\n    { key: 'forename', label: 'Forename' },\\n    { key: 'surname', label: 'Surname' },\\n    { key: 'email', label: 'Email', rules: [{ constraint: { unique: true }, message: 'Duplicates are not allowed' }] }\\n  ];\\n  const onChangeAction = action('Parsed value has changed');\\n  const onValidationAction = action('Validation value has changed');\\n\\n  return (\\n    <DSVImport<BasicType> columns={columns} onChange={onChangeAction} onValidation={onValidationAction}>\\n      <DSVImport.TextareaInput />\\n      <CustomTablePreview />\\n    </DSVImport>\\n  );\\n};\\nUsingOnValidationCallback.story = { name: 'Using on validation callback' };\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"usage-examples--basic-usage\":{\"startLoc\":{\"col\":26,\"line\":10},\"endLoc\":{\"col\":1,\"line\":24},\"startBody\":{\"col\":26,\"line\":10},\"endBody\":{\"col\":1,\"line\":24}},\"usage-examples--using-on-change-callback\":{\"startLoc\":{\"col\":37,\"line\":27},\"endLoc\":{\"col\":1,\"line\":51},\"startBody\":{\"col\":37,\"line\":27},\"endBody\":{\"col\":1,\"line\":51}},\"usage-examples--using-on-validation-callback\":{\"startLoc\":{\"col\":41,\"line\":60},\"endLoc\":{\"col\":1,\"line\":75},\"startBody\":{\"col\":41,\"line\":60},\"endBody\":{\"col\":1,\"line\":75}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/DSVImport.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React, { useState } from 'react';\nimport { DSVImport, ColumnType } from './';\nimport { action } from '@storybook/addon-actions';\nimport styled from '@emotion/styled';\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React, { useState } from 'react';\\nimport { DSVImport, ColumnType } from './';\\nimport { action } from '@storybook/addon-actions';\\nimport styled from '@emotion/styled';\\n\\nexport default { title: 'Usage|Examples' };\\n\\ntype BasicType = { forename: string; surname: string; email: string };\\n\\nexport const BasicUsage = () => {\\n  const columns: ColumnType<BasicType>[] = [\\n    { key: 'forename', label: 'Forename' },\\n    { key: 'surname', label: 'Surname' },\\n    { key: 'email', label: 'Email' }\\n  ];\\n  const onChangeAction = action('Parsed value has changed');\\n\\n  return (\\n    <DSVImport<BasicType> columns={columns} onChange={onChangeAction}>\\n      <DSVImport.TextareaInput />\\n      <DSVImport.TablePreview />\\n    </DSVImport>\\n  );\\n};\\nBasicUsage.story = { name: 'Basic usage' };\\n\\nexport const UsingOnChangeCallback = () => {\\n  const columns: ColumnType<BasicType>[] = [\\n    { key: 'forename', label: 'Forename' },\\n    { key: 'surname', label: 'Surname' },\\n    { key: 'email', label: 'Email' }\\n  ];\\n  const onChangeAction = action('Parsed value has changed');\\n  const [state, setState] = useState<BasicType[]>([]);\\n\\n  const handleOnChange = (value: BasicType[]) => {\\n    onChangeAction(value);\\n    setState(value);\\n  };\\n\\n  return (\\n    <>\\n      <DSVImport<BasicType> columns={columns} onChange={handleOnChange}>\\n        <DSVImport.TextareaInput />\\n        <DSVImport.TablePreview />\\n      </DSVImport>\\n      <h2>Current state as JSON:</h2>\\n      {JSON.stringify(state)}\\n    </>\\n  );\\n};\\nUsingOnChangeCallback.story = { name: 'Using on change callback' };\\n\\nconst CustomTablePreview = styled(DSVImport.TablePreview)`\\n  .error {\\n    border: 1px solid red;\\n  }\\n`;\\n\\nexport const UsingOnValidationCallback = () => {\\n  const columns: ColumnType<BasicType>[] = [\\n    { key: 'forename', label: 'Forename' },\\n    { key: 'surname', label: 'Surname' },\\n    { key: 'email', label: 'Email', rules: [{ constraint: { unique: true }, message: 'Duplicates are not allowed' }] }\\n  ];\\n  const onChangeAction = action('Parsed value has changed');\\n  const onValidationAction = action('Validation value has changed');\\n\\n  return (\\n    <DSVImport<BasicType> columns={columns} onChange={onChangeAction} onValidation={onValidationAction}>\\n      <DSVImport.TextareaInput />\\n      <CustomTablePreview />\\n    </DSVImport>\\n  );\\n};\\nUsingOnValidationCallback.story = { name: 'Using on validation callback' };\\n\",\"locationsMap\":{\"usage-examples--basic-usage\":{\"startLoc\":{\"col\":26,\"line\":10},\"endLoc\":{\"col\":1,\"line\":24},\"startBody\":{\"col\":26,\"line\":10},\"endBody\":{\"col\":1,\"line\":24}},\"usage-examples--using-on-change-callback\":{\"startLoc\":{\"col\":37,\"line\":27},\"endLoc\":{\"col\":1,\"line\":51},\"startBody\":{\"col\":37,\"line\":27},\"endBody\":{\"col\":1,\"line\":51}},\"usage-examples--using-on-validation-callback\":{\"startLoc\":{\"col\":41,\"line\":60},\"endLoc\":{\"col\":1,\"line\":75},\"startBody\":{\"col\":41,\"line\":60},\"endBody\":{\"col\":1,\"line\":75}}}},}, title: 'Usage|Examples' };\n\ntype BasicType = { forename: string; surname: string; email: string };\n\nexport const BasicUsage = addSourceDecorator(() => {\n  const columns: ColumnType<BasicType>[] = [\n    { key: 'forename', label: 'Forename' },\n    { key: 'surname', label: 'Surname' },\n    { key: 'email', label: 'Email' }\n  ];\n  const onChangeAction = action('Parsed value has changed');\n\n  return (\n    <DSVImport<BasicType> columns={columns} onChange={onChangeAction}>\n      <DSVImport.TextareaInput />\n      <DSVImport.TablePreview />\n    </DSVImport>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\nBasicUsage.story = { name: 'Basic usage' };\n\nexport const UsingOnChangeCallback = addSourceDecorator(() => {\n  const columns: ColumnType<BasicType>[] = [\n    { key: 'forename', label: 'Forename' },\n    { key: 'surname', label: 'Surname' },\n    { key: 'email', label: 'Email' }\n  ];\n  const onChangeAction = action('Parsed value has changed');\n  const [state, setState] = useState<BasicType[]>([]);\n\n  const handleOnChange = (value: BasicType[]) => {\n    onChangeAction(value);\n    setState(value);\n  };\n\n  return (\n    <>\n      <DSVImport<BasicType> columns={columns} onChange={handleOnChange}>\n        <DSVImport.TextareaInput />\n        <DSVImport.TablePreview />\n      </DSVImport>\n      <h2>Current state as JSON:</h2>\n      {JSON.stringify(state)}\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\nUsingOnChangeCallback.story = { name: 'Using on change callback' };\n\nconst CustomTablePreview = styled(DSVImport.TablePreview)`\n  .error {\n    border: 1px solid red;\n  }\n`;\n\nexport const UsingOnValidationCallback = addSourceDecorator(() => {\n  const columns: ColumnType<BasicType>[] = [\n    { key: 'forename', label: 'Forename' },\n    { key: 'surname', label: 'Surname' },\n    { key: 'email', label: 'Email', rules: [{ constraint: { unique: true }, message: 'Duplicates are not allowed' }] }\n  ];\n  const onChangeAction = action('Parsed value has changed');\n  const onValidationAction = action('Validation value has changed');\n\n  return (\n    <DSVImport<BasicType> columns={columns} onChange={onChangeAction} onValidation={onValidationAction}>\n      <DSVImport.TextareaInput />\n      <CustomTablePreview />\n    </DSVImport>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\nUsingOnValidationCallback.story = { name: 'Using on validation callback' };\n",locationsMap:{"usage-examples--basic-usage":{startLoc:{col:26,line:32},endLoc:{col:139,line:46},startBody:{col:26,line:32},endBody:{col:139,line:46}},"usage-examples--using-on-change-callback":{startLoc:{col:37,line:49},endLoc:{col:139,line:73},startBody:{col:37,line:49},endBody:{col:139,line:73}},"usage-examples--using-on-validation-callback":{startLoc:{col:41,line:82},endLoc:{col:139,line:97},startBody:{col:41,line:82},endBody:{col:139,line:97}}}}},"storySource",{source:"import React, { useState } from 'react';\nimport { DSVImport, ColumnType } from './';\nimport { action } from '@storybook/addon-actions';\nimport styled from '@emotion/styled';\n\nexport default { title: 'Usage|Examples' };\n\ntype BasicType = { forename: string; surname: string; email: string };\n\nexport const BasicUsage = () => {\n  const columns: ColumnType<BasicType>[] = [\n    { key: 'forename', label: 'Forename' },\n    { key: 'surname', label: 'Surname' },\n    { key: 'email', label: 'Email' }\n  ];\n  const onChangeAction = action('Parsed value has changed');\n\n  return (\n    <DSVImport<BasicType> columns={columns} onChange={onChangeAction}>\n      <DSVImport.TextareaInput />\n      <DSVImport.TablePreview />\n    </DSVImport>\n  );\n};\nBasicUsage.story = { name: 'Basic usage' };\n\nexport const UsingOnChangeCallback = () => {\n  const columns: ColumnType<BasicType>[] = [\n    { key: 'forename', label: 'Forename' },\n    { key: 'surname', label: 'Surname' },\n    { key: 'email', label: 'Email' }\n  ];\n  const onChangeAction = action('Parsed value has changed');\n  const [state, setState] = useState<BasicType[]>([]);\n\n  const handleOnChange = (value: BasicType[]) => {\n    onChangeAction(value);\n    setState(value);\n  };\n\n  return (\n    <>\n      <DSVImport<BasicType> columns={columns} onChange={handleOnChange}>\n        <DSVImport.TextareaInput />\n        <DSVImport.TablePreview />\n      </DSVImport>\n      <h2>Current state as JSON:</h2>\n      {JSON.stringify(state)}\n    </>\n  );\n};\nUsingOnChangeCallback.story = { name: 'Using on change callback' };\n\nconst CustomTablePreview = styled(DSVImport.TablePreview)`\n  .error {\n    border: 1px solid red;\n  }\n`;\n\nexport const UsingOnValidationCallback = () => {\n  const columns: ColumnType<BasicType>[] = [\n    { key: 'forename', label: 'Forename' },\n    { key: 'surname', label: 'Surname' },\n    { key: 'email', label: 'Email', rules: [{ constraint: { unique: true }, message: 'Duplicates are not allowed' }] }\n  ];\n  const onChangeAction = action('Parsed value has changed');\n  const onValidationAction = action('Validation value has changed');\n\n  return (\n    <DSVImport<BasicType> columns={columns} onChange={onChangeAction} onValidation={onValidationAction}>\n      <DSVImport.TextareaInput />\n      <CustomTablePreview />\n    </DSVImport>\n  );\n};\nUsingOnValidationCallback.story = { name: 'Using on validation callback' };\n",locationsMap:{"usage-examples--basic-usage":{startLoc:{col:26,line:10},endLoc:{col:1,line:24},startBody:{col:26,line:10},endBody:{col:1,line:24}},"usage-examples--using-on-change-callback":{startLoc:{col:37,line:27},endLoc:{col:1,line:51},startBody:{col:37,line:27},endBody:{col:1,line:51}},"usage-examples--using-on-validation-callback":{startLoc:{col:41,line:60},endLoc:{col:1,line:75},startBody:{col:41,line:60},endBody:{col:1,line:75}}}}),title:"Usage|Examples"},addSourceDecorator(addSourceDecorator((function(){var onChangeAction=Object(dist.action)("Parsed value has changed");return react_default.a.createElement(src_DSVImport,{columns:[{key:"forename",label:"Forename"},{key:"surname",label:"Surname"},{key:"email",label:"Email"}],onChange:onChangeAction},react_default.a.createElement(src_DSVImport.TextareaInput,null),react_default.a.createElement(src_DSVImport.TablePreview,null))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/DSVImport.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/DSVImport.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}));BasicUsage.story={name:"Basic usage"};var UsingOnChangeCallback=addSourceDecorator(addSourceDecorator((function(){var onChangeAction=Object(dist.action)("Parsed value has changed"),_useState=Object(react.useState)([]),_useState2=Object(slicedToArray.a)(_useState,2),state=_useState2[0],setState=_useState2[1];return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement(src_DSVImport,{columns:[{key:"forename",label:"Forename"},{key:"surname",label:"Surname"},{key:"email",label:"Email"}],onChange:function(value){onChangeAction(value),setState(value)}},react_default.a.createElement(src_DSVImport.TextareaInput,null),react_default.a.createElement(src_DSVImport.TablePreview,null)),react_default.a.createElement("h2",null,"Current state as JSON:"),JSON.stringify(state))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/DSVImport.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/DSVImport.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__});UsingOnChangeCallback.story={name:"Using on change callback"};var CustomTablePreview=Object(styled_base_browser_esm.a)(src_DSVImport.TablePreview,{target:"enap4fb0",label:"CustomTablePreview"})(_templateObject()),UsingOnValidationCallback=addSourceDecorator(addSourceDecorator((function(){var onChangeAction=Object(dist.action)("Parsed value has changed"),onValidationAction=Object(dist.action)("Validation value has changed");return react_default.a.createElement(src_DSVImport,{columns:[{key:"forename",label:"Forename"},{key:"surname",label:"Surname"},{key:"email",label:"Email",rules:[{constraint:{unique:!0},message:"Duplicates are not allowed"}]}],onChange:onChangeAction,onValidation:onValidationAction},react_default.a.createElement(src_DSVImport.TextareaInput,null),react_default.a.createElement(CustomTablePreview,null))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/DSVImport.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/DSVImport.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__});UsingOnValidationCallback.story={name:"Using on validation callback"}},188:function(module,exports){},287:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__.a="# react-dsv-import\nFlexible, typed and easy to use React Component ⚛ to provide CSV, TSV and other delimiter-separated values formats ([DSV](https://en.wikipedia.org/wiki/Delimiter-separated_values)) import functionality.\n\n[![Travis (.com)](https://img.shields.io/travis/com/openscript/react-dsv-import)](https://travis-ci.com/github/openscript/react-dsv-import)\n[![npm](https://img.shields.io/npm/v/react-dsv-import)](https://www.npmjs.com/package/react-dsv-import)\n[![npm peer dependency version](https://img.shields.io/npm/dependency-version/react-dsv-import/peer/react)](https://www.npmjs.com/package/react)\n[![GitHub](https://img.shields.io/github/license/openscript/react-dsv-import)](https://github.com/openscript/react-dsv-import)\n[![Maintainability](https://api.codeclimate.com/v1/badges/f05b123887e046758a96/maintainability)](https://codeclimate.com/github/openscript/react-dsv-import/maintainability)\n[![Test Coverage](https://api.codeclimate.com/v1/badges/f05b123887e046758a96/test_coverage)](https://codeclimate.com/github/openscript/react-dsv-import/test_coverage)\n\n![Demonstration](./docs/demo.apng)\n\n## Getting started\nAdd the package with the package manager of choice to your project:\n\n - **yarn**: `yarn add react-dsv-import`\n - **npm**: `npm install react-dsv-import`\n - **npx**: `npx -p react-dsv-import`\n\n### TypeScript\n```\nimport { DSVImport, ColumnsType } from 'react-dsv-import';\n\ntype BasicType = { forename: string; surname: string; email: string };\n\nconst columns: ColumnsType<BasicType> = [\n  { key: 'forename', label: 'Forename' },\n  { key: 'surname', label: 'Surname' },\n  { key: 'email', label: 'Email' }\n];\n\n<DSVImport<BasicType> columns={columns}>\n  <DSVImport.TextareaInput />\n  <DSVImport.TablePreview />\n</DSVImport>\n```\n\n### JavaScript\n```\nimport { DSVImport } from 'react-dsv-import';\n\nconst columns = [\n  { key: 'forename', label: 'Forename' },\n  { key: 'surname', label: 'Surname' },\n  { key: 'email', label: 'Email' }\n];\n\n<DSVImport columns={columns}>\n  <DSVImport.TextareaInput />\n  <DSVImport.TablePreview />\n</DSVImport>\n```\n\n## API\nThe `<DSVImport<T>>` components has the following API:\n\n| Property       | Type                           | Description                                                |\n|:---------------|:-------------------------------|:-----------------------------------------------------------|\n| `columns`      | [ColumnType](#columntype)      | Description of the expected columns                        |\n| `transformers?`| [Transformer](#transformer)`[]`| Globally applied transformers                              |\n| `onChange?`    | `(value: T[]) => void`         | Callback which is called after parsing the input           |\n| `onValidation?`| `(errors: Error<T>[]) => void` | Callback which is called if there are validation errors    |\n   \n### Types\nWithin this section additional types are explained.\n\n#### ColumnType\n| Property        | Type                         | Description                                                 |\n|:----------------|:-----------------------------|:------------------------------------------------------------|\n| `key`           | `string`                     | Key of the current column                                   |\n| `label`         | `string`                     | Label of the current column, which can be shown to the user |\n| `rules?`        | [Rule](#rule)`[]`            | Validation rules which are applied to this column           |\n| `transformers?` | [Transformer](#transformer)`[]`| Transformers which are applied to this column             |\n\n#### Rule\n| Property        | Type                         | Description                                                 |\n|:----------------|:-----------------------------|:------------------------------------------------------------|\n| `message`       | `string`                     | Error message                                               |\n| `contraint`     | `{ unique: boolean } \\| { constraint: `[Constraint](#constraint)`}` | Constraint for this rule |\n\n#### Constraint\n`(value: string) => boolean`\n\n#### Transformer\n`(value: string) => string`\n\n## Project\nThis section describes the status of the project.\n\n### Features\nThe most important features of this component are:\n\n - ✅ Type definitions and type safety\n - ✅ DSV format detection\n - ✅ Fully compositable\n - ✅ Automatic testing with >90% coverage\n - ✅ Input validation\n - ✅ [Ant Design](https://ant.design/) integration (see storybook)\n - ✅ Input transformation (e.g. trim, ...)\n - ❌ [Material UI](https://material-ui.com/) integration (see storybook)\n\n✅ means the feature is implemented and released. ❌ indicates that a feature is planned.\n\n### Links\n - [Code repository](https://github.com/openscript/react-dsv-import)\n - [Build status](https://travis-ci.com/github/openscript/react-dsv-import)\n - [Documenation and examples](https://openscript.github.io/react-dsv-import)\n - [Package publication](https://www.npmjs.com/package/react-dsv-import)\n - [Code quality evaluation](https://codeclimate.com/github/openscript/react-dsv-import)\n\n## Tools\n - [yarn](https://yarnpkg.com/)\n - [rollup.js](https://rollupjs.org/)\n - [TypeScript](https://www.typescriptlang.org/)\n   - [TypeScript ESLint](https://typescript-eslint.io/)\n - [React](https://reactjs.org/)\n - [Storybook](https://storybook.js.org/)\n   - [Addon: Docs](https://github.com/storybookjs/storybook/tree/master/addons/docs)\n   - [Addon: Source](https://github.com/storybookjs/storybook/tree/master/addons/storysource)\n   - [Addon: Actions](https://github.com/storybookjs/storybook/tree/master/addons/actions)\n  - [Travis CI](https://travis-ci.com)\n\n## Resources\n - [Article: Using ESLint and Prettier in a TypeScript Project](https://www.robertcooper.me/using-eslint-and-prettier-in-a-typescript-project)\n - [Template: Rollup Starter Lib (TypeScript)](https://github.com/rollup/rollup-starter-lib/tree/typescript)\n - [Article: Creating a React Component library using Rollup, Typescript, Sass and Storybook](https://blog.harveydelaney.com/creating-your-own-react-component-library/) <br> Explains how to create a React component library using Rollup\n - [Template: Debugging tests in VS Code](https://github.com/microsoft/vscode-recipes/tree/master/debugging-jest-tests)\n"},440:function(module,exports){},441:function(module,exports){},442:function(module,exports){},460:function(module,exports,__webpack_require__){__webpack_require__(461),__webpack_require__(603),__webpack_require__(604),__webpack_require__(1254),module.exports=__webpack_require__(1255)},523:function(module,exports){}},[[460,1,2]]]);
//# sourceMappingURL=main.bef4eead7881568a7b7e.bundle.js.map